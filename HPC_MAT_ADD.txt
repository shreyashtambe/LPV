#include <iostream>
#include <cstdlib>
#include <ctime>
#include <omp.h>

using namespace std;

const int VECTOR_SIZE = 10;

int main()
{
     

    // allocate memory for the vectors
    int* vector1 = new int[VECTOR_SIZE];
    int* vector2 = new int[VECTOR_SIZE];
    int* result = new int[VECTOR_SIZE];

    // fill the vectors with random numbers
    #pragma omp parallel for
    for (int i = 0; i < VECTOR_SIZE; i++)
    {
         int x,y;
        cout<<"Enter vector 1 's element : ";
        cin>>x;
        cout<<"Enter vector 2's element : ";
        cin>>y;
        
        vector1[i] =x;
        vector2[i] = y;
    }

    // add the vectors in parallel using OpenMP
    #pragma omp parallel for
    for (int i = 0; i < VECTOR_SIZE; i++)
    {
        result[i] = vector1[i] + vector2[i];
    }

    // print the first and second vectors and their sum
    cout << "Vector 1: \n[";
    for (int i = 0; i < VECTOR_SIZE; i++)
    {
        cout << vector1[i];
        if (i != VECTOR_SIZE - 1)
        {
            cout << ", ";
        }
    }
    cout << "]" << endl;

    cout << "Vector 2:\n [";
    for (int i = 0; i < VECTOR_SIZE; i++)
    {
        cout << vector2[i];
        if (i != VECTOR_SIZE - 1)
        {
            cout << ", ";
        }
    }
    cout << "]" << endl;

    cout << "Result Of Matrix Addition: \n[";
    for (int i = 0; i < VECTOR_SIZE; i++)
    {
        cout << result[i];
        if (i != VECTOR_SIZE - 1)
        {
            cout << ", ";
        }
    }
    cout << "]" << endl;

    // free the allocated memory
    delete[] vector1;
    delete[] vector2;
    delete[] result;

    return 0;
}

/*

Enter vector 1 's element : 10
Enter vector 2's element : 10
Enter vector 1 's element : 20
Enter vector 2's element : 20
Enter vector 1 's element : 30
Enter vector 2's element : 30
Enter vector 1 's element : 40
Enter vector 2's element : 40
Enter vector 1 's element : 50
Enter vector 2's element : 50
Enter vector 1 's element : 60
Enter vector 2's element : 60
Enter vector 1 's element : 70
Enter vector 2's element : 70
Enter vector 1 's element : 80
Enter vector 2's element : 80
Enter vector 1 's element : 90
Enter vector 2's element : 90
Enter vector 1 's element : 100
Enter vector 2's element : 100
Vector 1: 
[10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
Vector 2:
 [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
Result Of Matrix Addition: 
[20, 40, 60, 80, 100, 120, 140, 160, 180, 200]

*/
